<?php

namespace PHPM\Bundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TacheRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TacheRepository extends EntityRepository
{
	
	public function getTacheWithCriteria($plage, $permis, $equipe)
	{
		$dqlS = 'SELECT t FROM PHPMBundle:Tache t JOIN t.plagesHoraire p JOIN p.creneaux c';
		$dqlW = ' WHERE t.statut=3';
		
		if ($plage !== '') {
		    $pref = json_decode($this->getEntityManager()->getRepository('PHPMBundle:Config')->findOneByField('manifestation_plages')->getValue(),TRUE);
		    $plage= $pref[$plage];
		    $debut = $plage['debut'];
		    $fin = $plage['fin'];
			$dqlW .= " AND DATE_DIFF('$fin', c.debut) >= 0 AND DATE_DIFF(c.fin, '$debut') >= 0";
		}
		
		if ($permis !== '') {
			$dqlW .= " AND t.permisNecessaire >= '$permis'";
		}
		
		if ($equipe !== '') {
			$dqlS .= ' JOIN t.groupeTache g JOIN g.equipe e';
			$dqlW .= " AND e.id = '$equipe'";
		}
		
		$query = $this->getEntityManager()->createQuery($dqlS.$dqlW);
		
		return $query->getResult();
	}
	
	public function search($s)
	{
		return $this->getEntityManager()
		->createQuery("SELECT t FROM PHPMBundle:Tache t WHERE t.nom LIKE :s AND t.statut != '-1'")
		->setParameter('s', "%".$s."%")
		->getResult();
	}
	
	public function getNonDeletedTaches($gid)
	{
	    return $this->getEntityManager()
	    ->createQuery('SELECT t FROM PHPMBundle:Tache t LEFT JOIN t.groupeTache g WHERE g.id = :gid AND t.statut !=-1')
	    ->setParameter('gid', $gid)
	    ->getResult();
	}
	
	public function getOrgaStats(\PHPM\Bundle\Entity\Orga $orga)
	{
		$stats=array('orga'=>array("0"=>0,"1"=>0,"2"=>0),'equipe'=>array("0"=>0,"1"=>0,"2"=>0));
		$orgaStats =  $this->getEntityManager()
		->createQuery('SELECT t.statut,COUNT(t) as nb FROM PHPMBundle:Tache t LEFT JOIN t.groupeTache g JOIN g.equipe e JOIN t.responsable r 
				WHERE r.id = :oid 
				GROUP BY t.statut')
		->setParameter('oid', $orga->getId())
		->getResult();
		
		foreach ($orgaStats as $row){
			if($row['statut']==0){
				$stats['orga'][0]=$row['nb'];
			}
			if($row['statut']==1){
				$stats['orga'][1]=$row['nb'];
			}
			if($row['statut']>=2){
				$stats['orga'][2]+=$row['nb'];
			}
		}
		
		
		$equipeStats =  $this->getEntityManager()
		->createQuery('SELECT t.statut,COUNT(t) as nb FROM PHPMBundle:Tache t LEFT JOIN t.groupeTache g JOIN g.equipe e JOIN t.responsable r
				WHERE e.id = :eid
				GROUP BY t.statut')
				->setParameter('eid', $orga->getEquipe()->getId())
				->getResult();
		
		foreach ($equipeStats as $row){
			if($row['statut']==0){
				$stats['equipe'][0]=$row['nb'];
			}
			if($row['statut']==1){
				$stats['equipe'][1]=$row['nb'];
			}
			if($row['statut']>=2){
				$stats['equipe'][2]+=$row['nb'];
			}
		}
		return $stats;

	}
	

	
	
}